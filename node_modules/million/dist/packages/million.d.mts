'use client';
import { A as AbstractBlock, V as VNode, E as Edit } from '../shared/million.50256fe7.mjs';
export { B as Block, a as VElement, b as block, m as mount, p as patch, w as withKey } from '../shared/million.50256fe7.mjs';
export { f as firstChild$, n as nextSibling$, s as stringToDOM } from '../shared/million.9d4df3c1.mjs';
import 'react';

declare const mapArray: (children: AbstractBlock[]) => ArrayBlock;
declare class ArrayBlock extends AbstractBlock {
    b: AbstractBlock[];
    constructor(children: AbstractBlock[]);
    v(): void;
    p(fragment: ArrayBlock): HTMLElement;
    m(parent: HTMLElement, refNode?: Node | null): HTMLElement;
    x(): void;
    u(): boolean;
    s(): string;
    t(): HTMLElement | null | undefined;
}

declare const renderToTemplate: (vnode: VNode, edits?: Edit[], path?: number[]) => string;

export { AbstractBlock, ArrayBlock, VNode, mapArray, renderToTemplate };
